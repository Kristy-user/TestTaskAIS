import { createAction } from '@reduxjs/toolkit';
import {User} from "../../types/types";
import fakeServerAPI from "../../api/fakeServerAPI";
import { Dispatch} from "react";
import { ThunkAction } from 'redux-thunk';
import { Action } from 'redux';
export const loadingUsers = createAction('LoadingUsers');

export const isLogIn = createAction<boolean>('IsLogIn');
export const updateUserInfo = createAction<Partial<User>>('UpdateUserInfo');
export const logOut = createAction('LogOut');
// This type will represent the action object generated by `updateUserInfo`
export type UpdateUserInfoAction = ReturnType<typeof updateUserInfo>;

// export const newUserPersonalData = (data: Partial<User>, id: number) => {
//   return (dispatch: Dispatch<UpdateUserInfoAction>) => {
//     fakeServerAPI
//       .post(`/userPersonalData`, {
//         userId: id,
//         name: data.name,
//         surname: data.surname,
//         town: data.town,
//         country: data.country,
//         phone: data.phone,
//       })
//       .then((response) => {
//         dispatch(updateUserInfo(response.data));
//       })
//   };
// };
// export const refreshUserPersonalData = (data:User, current:User) => {
//   return (dispatch: Dispatch<UpdateUserInfoAction>) => {
//     fakeServerAPI
//       .delete(`/userPersonalData/${current.id}`)
//       .then(() => {
//         dispatch(updateUserInfo(data));
//       })
//
//   };
// };